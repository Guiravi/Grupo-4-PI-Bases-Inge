@page  "{idArticuloPK:int?}"
@model LaCafeteria.Pages.EscribirArticuloModel
@using LaCafeteria.Utilidades
@{
    ViewData["Title"] = "EscribirArticulo";
}
@using LaCafeteria.Models;

@{ if ( Model.articulo.estado == EstadoArticulo.EnCorrecciones )
    {
        <h2>Corregir Artículo</h2>
    } else
    {
        <h2>Escribir Artículo</h2>
    }
}

@if ( AvisosInmediatos.Existe(Model, "articuloGuardado") )
{
    @Html.Raw(AvisosInmediatos.Get(Model, "articuloGuardado"));
}
<form method="post">
    <div class="form-group">
        <label for="txtTitulo">Título del artículo</label>
        <input id="txtTitulo" type="text" class="form-control" asp-for="articulo.titulo" />
        <span asp-validation-for="articulo.titulo"></span>
    </div>
    <div class="form-group">
        <div class="form-inline">
            <label for="slctAutor">Autor(es)</label>
            <select id="slctAutor" class="form-control">
                @foreach ( var autor in Model.listaMiembros )
                {
                    <option value="@autor.usernamePK">@autor.GetNombreCompleto()</option>
                }
            </select>
            <input type="button" class="btn" value="Agregar autor" onclick="agregarAutor()" />
        </div>
        @if ( AvisosInmediatos.Existe(Model, "listaMiembrosAutores") )
        {
            @Html.Raw(AvisosInmediatos.Get(Model, "listaMiembrosAutores"));
        }
        <div id="autores">
        </div>
    </div>
    <div class="form-group">
        <label for="txtResumen">Resumen del artículo</label>
        <textarea id="txtResumen" rows="2" cols="20" class="form-control" asp-for="articulo.resumen"></textarea>
        <span asp-validation-for="articulo.resumen"></span>
    </div>
    <div class="form-group">
        <label for="txtFecha">Fecha de publicación</label>
        @if ( Model.idArticuloPK != -1 )
        {
            <input id="txtFecha" type="date" class="form-control" asp-for="articulo.fechaPublicacion" style="width: 150px;" />
            <span asp-validation-for="articulo.fechaPublicacion"></span>
        } else
        {
            <input id="txtFecha" type="date" class="form-control" asp-for="articulo.fechaPublicacion" value="@Model.articulo.fechaPublicacion" />
            <span asp-validation-for="articulo.fechaPublicacion"></span>
        }
    </div>

    <div class="container">
        <div class="row">
            <div class="form-group col-lg-8">
                <label for="txtContenido">Artículo</label>
                <textarea id="txtContenido" asp-for="articulo.contenido"></textarea>
                <span asp-validation-for="articulo.contenido"></span>
            </div>
            <div class="form-group col-lg-4">
                <div class="row">
                    <div class="btn-group" style="margin-top: 25px">
                        @if ( AvisosInmediatos.Existe(Model, "listaTopicosArticulo") )
                        {
                            @Html.Raw(AvisosInmediatos.Get(Model, "listaTopicosArticulo"));
                        }
                        <button type="button" class="btn btn-info">Seleccione tópicos</button>
                        <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="caret"></span>
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu">
                            @if ( Model.idArticuloPK != -1 )
                            {
                                string categoriaActual = "";
                                for ( int topicoActual = 0; topicoActual < Model.listaCategoriaTopicos.Count; ++topicoActual )
                                {
                                    if ( categoriaActual != Model.listaCategoriaTopicos[topicoActual].nombreCategoriaPK )
                                    {
                                        categoriaActual = Model.listaCategoriaTopicos[topicoActual].nombreCategoriaPK;

                                        <li role="separator" class="divider"></li>
                                        <li class="dropdown-header">@Html.Raw(Model.listaCategoriaTopicos[topicoActual].nombreCategoriaPK)</li>
                                        <li role="separator" class="divider"></li>
                                    }

                                    int contador = 0;
                                    bool encontrado = false;
                                    while ( !encontrado && contador < Model.listaCategoriaTopicosArticulo.Count )
                                    {
                                        if ( Model.listaCategoriaTopicos[topicoActual].ToString().Equals(Model.listaCategoriaTopicosArticulo[contador]) )
                                        {
                                            encontrado = true;

                                            <li style="margin: 5px 5px" class="text-primary"><input type="checkbox" name="listaCategoriaTopicosArticulo" value="@Model.listaCategoriaTopicos[topicoActual].ToString()" checked="checked"> @Model.listaCategoriaTopicos[topicoActual].nombreTopicoPK</li>
                                        }

                                        contador++;
                                    }

                                    if ( !encontrado )
                                    {
                                        <li style="margin: 5px 5px" class="text-primary"><input type="checkbox" name="listaCategoriaTopicosArticulo" value="@Model.listaCategoriaTopicos[topicoActual].ToString()"> @Model.listaCategoriaTopicos[topicoActual].nombreTopicoPK</li>
                                    }

                                }
                            } else
                            {
                                string categoriaActual = "";
                                for ( int topicoActual = 0; topicoActual < Model.listaCategoriaTopicos.Count; ++topicoActual )
                                {
                                    if ( categoriaActual != Model.listaCategoriaTopicos[topicoActual].nombreCategoriaPK )
                                    {
                                        categoriaActual = Model.listaCategoriaTopicos[topicoActual].nombreCategoriaPK;

                                        <li role="separator" class="divider"></li>
                                        <li class="dropdown-header">@Html.Raw(Model.listaCategoriaTopicos[topicoActual].nombreCategoriaPK)</li>
                                        <li role="separator" class="divider"></li>
                                        <li style="margin: 5px 5px" class="text-primary"><input type="checkbox" name="listaCategoriaTopicosArticulo" value="@Model.listaCategoriaTopicos[topicoActual].ToString()"> @Model.listaCategoriaTopicos[topicoActual].nombreTopicoPK</li>
                                    } else
                                    {
                                        <li style="margin: 5px 5px" class="text-primary"><input type="checkbox" name="listaCategoriaTopicosArticulo" value="@Model.listaCategoriaTopicos[topicoActual].ToString()"> @Model.listaCategoriaTopicos[topicoActual].nombreTopicoPK</li>
                                    }
                                }
                            }
                        </ul>
                    </div>
                </div>
                @{ if ( Model.articulo.estado == EstadoArticulo.EnCorrecciones || Model.articulo.estado == EstadoArticulo.Rechazado )
                    {
                        <div style="margin-top:20px;border-radius:10px" class="row">
                            <div style="max-height:500px;overflow:scroll" class="panel panel-default">
                                <div class="panel-heading">
                                    Revisiones
                                </div>
                                <div class="panel-body">
                                    @for ( int i = 0; i < Model.revisiones.Count; ++i )
                                    {
                                        <div class="panel panel-default">

                                            <div class="panel-heading">Revisor @(i + 1)</div>
                                            <div class="panel-body">
                                                <p><b>Opinion:</b> @Model.revisiones[i].opinion</p>
                                                <p><b>Contribucion:</b> @Model.revisiones[i].contribucion</p>
                                                <p><b>Forma:</b> @Model.revisiones[i].forma</p>

                                                <p>Comentarios:</p>
                                                <p>@Model.revisiones[i].comentarios</p>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-3">

                @if ( Model.idArticuloPK != -1 )
                {
                    <input id="btnGuardar" type="submit" class="btn-primary" asp-page-handler="editar" value="Guardar progreso" style="width: 150px" />
                } else
                {
                    <input id="btnEditar" type="submit" class="btn-primary" asp-page-handler="guardar" value="Guardar progreso" style="width: 150px" />
                }

            </div>
            <div class="col-md-3">
                <input id="btnEnviarRev" type="submit" class="btn-primary" asp-page-handler="enviarRevision" value="Enviar a revisión" style="width: 150px" />
            </div>
        </div>
    </div>
</form>
<script src="~/lib/tinymce/tinymce.min.js"></script>
<script>
    tinymce.init({
        selector: '#txtContenido',
        paste_data_images: true,
        automatic_uploads: false,
        convert_urls: false,
        height: 551,
        plugins: [
            "advlist autolink lists link image charmap print preview anchor",
            "searchreplace visualblocks code fullscreen",
            "insertdatetime media table paste preview imagetools wordcount"
        ],
        toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | preview",
        content_css: '//www.tiny.cloud/css/codepen.min.css'
    });
    tinymce.activeEditor.execCommand('mcePreview');
</script>
<script>
    var miembrosAutores = new Array();
    function agregarAutor() {
        let select = document.getElementById('slctAutor');
        let option = select[select.selectedIndex];

        if (!miembrosAutores.includes(option.value)) {
            const div = document.createElement('div');
            const button = document.createElement('input');
            button.type = "button";
            button.value = "x";
            button.toDelete = option.value;
            button.onclick = borrar;
            miembrosAutores.push(option.value)
            div.innerHTML = '<label>' + option.text + '</label><input type="hidden" name="listaMiembrosAutores" value=\"' + option.value + '\"/>';
            document.getElementById('autores').appendChild(div);
            div.appendChild(button);
        }
    }
    @if (Model.idArticuloPK != -1)
    {
        @Html.Raw(Model.inyeccion);
    }
    function borrar() {
        miembrosAutores.splice(miembrosAutores.indexOf(this.toDelete), 1);
        document.getElementById('autores').removeChild(this.parentNode);
    }
</script>
