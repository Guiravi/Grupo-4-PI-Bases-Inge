@page "{articuloAID}"
@model LaCafeteria.Pages.AsignarRevisorModel
@using LaCafeteria.Models;
@{
	ViewData["Title"] = "AsignarRevisor";
}
@using LaCafeteria.Utilidades;

<style>
	.btn {
		display: inline-block;
		margin-bottom: 0;
		font-weight: normal;
		text-align: center;
		white-space: nowrap;
		vertical-align: middle;
		-ms-touch-action: manipulation;
		touch-action: manipulation;
		cursor: pointer;
		background-image: none;
		border: 1px solid transparent;
		padding: 6px 12px;
		font-size: 14px;
		line-height: 1.42857143;
		border-radius: 4px;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
	}

	.btn-success {
		color: #fff;
		background-color: #259959;
		border-color: #259959;
	}

	.btn-danger {
		color: #fff;
		background-color: #992525;
		border-color: #992525;
	}
</style>

<h2 class="text-center" style="font-weight:bolder">Título: @Model.articulo.titulo</h2>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            @if ( AvisosInmediatos.Existe(Model, "listaSolicitadosVacio") )
            {
                @Html.Raw(AvisosInmediatos.Get(Model, "listaSolicitadosVacio"));
            }
            <h1>Bienvenidos a la comunidad de práctica La Cafetería</h1>
        </div>
    </div>
</div>

    <div class="panel">
        <div class="panel-heading panel-default">
            <h3 class="panel-title">Miembros núcleos interesados en revisar el artículo</h3>
        </div>

        <div class="panel-body">
            @* foreach listaMiembrosInteresados y boton para aceptar o rechazar la solicitud de revision (PuedeSerRevisor "Interesa)"*@
            @if ( Model.listaMiembrosInteresados.Count > 0 )
            {
                <form method="post" enctype="multipart/form-data">
                    <table class="table table-hover table-striped">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Primer apellido</th>
                                <th>Segundo apellido</th>
                                <th>Nombre de usuario</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach ( MiembroModel miembro in Model.listaMiembrosInteresados )
                            {
                                <tr>
                                    <td>@miembro.nombre</td>
                                    <td>@miembro.apellido1</td>
                                    <td>@miembro.apellido2</td>
                                    <td>@miembro.usernamePK</td>
                                    <td><button type="submit" name="aceptar" class="btn btn-success" value="@miembro.usernamePK" asp-for="@Model.solicitudUsernamePK" asp-page-handler="aceptarsolicitud">Aceptar solicitud</button></td>
                                    <td><button type="submit" name="rechazar" class="btn btn-danger" value="@miembro.usernamePK" asp-for="@Model.solicitudUsernamePK" asp-page-handler="rechazarsolicitud">Rechazar solicitud</button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </form>
            } else
            {
                <p class="text-center">No hay interesados en revisar el artículo</p>
            }
        </div>
    </div>

    <div class="panel">
        <div class="panel-heading panel-default">
            <h3 class="panel-title">Solicitar colaboración a miembros núcleo</h3>
        </div>
        <div class="panel-body">
            @* Solicitar colaboracion a miembros de nucleo que no esten asignados (Revisa) o solicitados (PuedeSerRevisor "Solicitado")*@
            @if ( Model.listaMiembrosParaSolicitudRevision.Count > 0 )
            {
                <form method="post" enctype="multipart/form-data">

                    <label for="slctNucleo">Miembros Núcleo</label>
                    <div class="container row">
                        <div class="col-xs-4">
                            <select id="slctNucleo" class="form-control">
                                @foreach ( MiembroModel miembro in Model.listaMiembrosParaSolicitudRevision )
                                {
                                    <option value="@miembro.usernamePK">@miembro.GetNombreCompleto()</option>
                                }
                            </select>
                        </div>
                        <div>
                            <input type="button" class="btn" value="Agregar a lista" onclick="agregarSolicitudMiembro()" />
                        </div>
                    </div>
                    @* Lista de nucleos solicitados para colaboracion*@
                    <div id="nucleosSolicitados">
                        <p id="solicitadosListaVacia" class="text-center">Lista vacía</p>
                    </div>
                    <div class="container text-center">
                        <input type="submit" name="cancelar" class="btn btn-danger" value="Cancelar" asp-page-handler="cancelar" />
                        <input type="submit" name="solicitar" class="btn btn-success" value="Solicitar colaboración" asp-page-handler="solicitarcolaboracion" />
                    </div>
                </form>
            } else
            {
                <p class="text-center">No hay miembros disponibles para solicitar colaboración</p>
            }
        </div>
    </div>

    <div class="panel">
        <div class="panel-heading panel-default">
            <h3 class="panel-title">Lista de miembros núcleo asignados como revisores</h3>
        </div>

        @* foreach listaMiembrosAsignados (Revisa)*@
        <div class="panel-body">

            @if ( Model.listaMiembrosRevisores.Count > 0 )
            {
                <table class="table table-hover table-striped">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Primer apellido</th>
                            <th>Segundo apellido</th>
                            <th>Nombre de usuario</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach ( MiembroModel miembro in Model.listaMiembrosRevisores )
                        {
                            <tr>
                                <td>@miembro.nombre</td>
                                <td>@miembro.apellido1</td>
                                <td>@miembro.apellido2</td>
                                <td>@miembro.usernamePK</td>
                            </tr>
                        }
                    </tbody>
                </table>
            } else
            {
                <p class="text-center">No hay ningún miembro asignado</p>
            }
        </div>
    </div>

    <div class="panel">
        <div class="panel-heading panel-default">
            <h3 class="panel-title">Asignar revisores</h3>
        </div>

        <div class="panel-body">
            @* Asignar revisores a la fuerza (Agrega a Revisa)*@
            @if ( Model.listaMiembrosParaAsignarRevision.Count > 0 )
            {
                <form method="post" enctype="multipart/form-data">

                    <label for="slctAsgnados">Miembros Núcleo</label>
                    <div class="container row">
                        <div class="col-xs-4">
                            <select id="slctAsignados" class="form-control">
                                @foreach ( MiembroModel miembro in Model.listaMiembrosParaAsignarRevision )
                                {
                                    <option value="@miembro.usernamePK">@miembro.GetNombreCompleto()</option>
                                }
                            </select>
                        </div>
                        <div>
                            <input type="button" class="btn" value="Agregar a lista" onclick="agregarAsignacionMiembro()" />
                        </div>
                    </div>
                    @* Lista de nucleos seleccionados para mandar a revision*@
                    <div id="nucleosAsignados">
                        <p id="asignadosListaVacia" class="text-center">Lista vacía</p>
                    </div>
                    <div class="container text-center">
                        <input type="submit" name="cancelar" class="btn btn-danger" value="Cancelar" asp-page-handler="cancelar" />
                        <input type="submit" name="solicitar" class="btn btn-success" value="Asignar para revision" asp-page-handler="asignarrevisor" />
                    </div>
                </form>
            } else
            {
                <p class="text-center">No hay miembros disponibles para solicitar asignar</p>
            }
        </div>
    </div>
    <script>
        var miembrosAutores = new Array();
        function agregarSolicitudMiembro() {
            let select = document.getElementById('slctNucleo');
            let option = select[select.selectedIndex];

            if (!miembrosAutores.includes(option.value)) {
                if (document.getElementById("solicitadosListaVacia") !== null) {
                    const pListaVacia = document.getElementById("solicitadosListaVacia")
                    document.getElementById('nucleosSolicitados').removeChild(pListaVacia);
                }

                const div = document.createElement('div');
                const button = document.createElement('input');
                button.type = "button";
                button.value = "x";
                button.toDelete = option.value;
                button.onclick = borrarNucleoSolicitado;
                miembrosAutores.push(option.value)
                div.innerHTML = '<label>' + option.text + '</label><input type="hidden" name="listaSolicitados" value=\"' + option.value + '\"/>';
                document.getElementById('nucleosSolicitados').appendChild(div);
                div.appendChild(button);
            }
        }
        function borrarNucleoSolicitado() {
            miembrosAutores.splice(miembrosAutores.indexOf(this.toDelete), 1);
            document.getElementById('nucleosSolicitados').removeChild(this.parentNode);
            if (miembrosAutores.length === 0) {
                const p = document.createElement('p');
                p.id = 'solicitadosListaVacia';
                p.className = 'text-center';
                p.innerHTML = 'Lista vacía';
                document.getElementById('nucleosSolicitados').appendChild(p);
            }
        }

        var nucleosAsignados = new Array();
        function agregarAsignacionMiembro() {
            let select = document.getElementById('slctAsignados');
            let option = select[select.selectedIndex];

            if (!nucleosAsignados.includes(option.value)) {
                if (document.getElementById("asignadosListaVacia") !== null) {
                    const pListaVacia = document.getElementById("asignadosListaVacia")
                    document.getElementById('nucleosAsignados').removeChild(pListaVacia);
                }
                const div = document.createElement('div');
                const button = document.createElement('input');
                button.type = "button";
                button.value = "x";
                button.toDelete = option.value;
                button.onclick = borrarAsignado;
                nucleosAsignados.push(option.value)
                div.innerHTML = '<label>' + option.text + '</label><input type="hidden" name="listaAsignados" value=\"' + option.value + '\"/>';
                document.getElementById('nucleosAsignados').appendChild(div);
                div.appendChild(button);
            }
        }
        function borrarAsignado() {
            nucleosAsignados.splice(nucleosAsignados.indexOf(this.toDelete), 1);
            document.getElementById('nucleosAsignados').removeChild(this.parentNode);
            if (nucleosAsignados.length === 0) {
                const p = document.createElement('p');
                p.id = 'asignadosListaVacia';
                p.className = 'text-center';
                p.innerHTML = 'Lista vacía';
                document.getElementById('nucleosAsignados').appendChild(p);
            }
        }
    </script>
