@page
@model LaCafeteria.Pages.EnviarCorreoModel
@{
    ViewData["Title"] = "Enviar Correos";
}
@using LaCafeteria.Utilidades;

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/1000hz-bootstrap-validator/0.11.9/validator.min.js"></script>
<script src="~/lib/typeahead.js/typeahead.bundle.js"></script>
<link rel="stylesheet" href="~/lib/typeahead.js/typeahead.css" />

<h2 class="text-center">Enviar un Correo Electróncio</h2>

@if (AvisosInmediatos.Existe(Model, "Correo Enviado")){
    @Html.Raw(AvisosInmediatos.Get(Model,"Correo Enviado"))
} 

<form method="post" enctype="multipart/form-data" data-toggle="validator" data-disable="false">
    <div class="form-group">
        <label for="destinoMensaje"><b>Usuario o Correo Electrónico Destino: </b></label>
        <div id="scrollable-dropdown-menu">
            <input asp-for="destino" class="form-control twitter-typeahead" type="text" id="destinoMensaje" placeholder="Escriba el destinatario de su mensaje" required data-error="Campo requerido" autocomplete="off" />
        </div>
        <div class="help-block with-errors"></div>
    </div>
    <div class="form-group">
        <label for="asuntoMensaje"><b>Asunto: </b></label>
        <input asp-for="asunto" class="form-control" type="text" id="asuntoMensaje" placeholder="Escriba el asunto de su mensaje" required data-error="Campo requerido" />
        <div class="help-block with-errors"></div>
    </div>
    <div class="form-group">
        <label for="mensaje"><b>Mensaje: </b></label>
        <textarea asp-for="mensaje" class="form-control" placeholder="Escriba su mensaje" id="mensaje" rows="5" required data-error="Campo requerido"></textarea>
        <div class="help-block with-errors"></div>
    </div>
    <div class="form-group">
        <label for="adjuntarArchivo"><b>Adjuntar archivo(s)</b></label>
        <input type="file" id="adjuntarArchivo" asp-for="archivoAdjunto" onchange="SizeValidation()" />
        <p class="help-block" id="tamanoArchivos">Tamaño: 0 MB</p>
    </div>

    <button type="reset" class="btn btn-default" onclick="clearTamano()">Reiniciar Mensaje</button>
    <button type="submit" class="btn btn-default">Enviar Mensaje</button>
</form>

<script>
    SizeValidation = () => {
        const fileInput = document.getElementById('adjuntarArchivo');
        if (fileInput.files.length > 0) {
            let sizeSum = 0;
            for (let i = 0; i < fileInput.files.length; ++i) {
                sizeSum = sizeSum + fileInput.files.item(i).size;
            }

            if (sizeSum > 25165824) {
                alert("El tamaño máximo de todos los archivos no debe sobrepasar los 24 MB.")
                document.getElementById('adjuntarArchivo').value = null;
                document.getElementById('tamanoArchivos').textContent = 'Tamaño de los archivos que deseaba adjuntar: ' + Math.round((sizeSum / 1048576) * 100) / 100 + ' MB';
            } else {
                document.getElementById('tamanoArchivos').textContent = 'Tamaño: ' + Math.round((sizeSum / 1048576) * 100) / 100 + ' MB';
            }

        }
    }

    clearTamano = () => {
        document.getElementById("tamanoArchivos").textContent = "Tamaño: 0 MB"
    }

    var substringMatcher = function (strs) {
    return function findMatches(q, cb) {
        var matches, substringRegex;

        // an array that will be populated with substring matches
        matches = [];

        // regex used to determine if a string contains the substring `q`
        substrRegex = new RegExp(q, 'i');

            // iterate through the pool of strings and for any string that
            // contains the substring `q`, add it to the `matches` array
            $.each(strs, function (i, str) {
            if (substrRegex.test(str)) {
                matches.push(str);
            }
        });

        cb(matches);
    };
};

var users = [];

@foreach (string miembro in Model.listaMiembros)
{
        @:users.push("@miembro")
    }

    $('#scrollable-dropdown-menu .twitter-typeahead').typeahead({
hint: true,
        highlight: true,
        minLength: 3
    },
        {
name: 'users',
            source: substringMatcher(users)
        });
</script>
